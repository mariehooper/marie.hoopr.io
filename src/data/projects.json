[
  {
    "name": "Bookshelf",
    "class": "bookshelf",
    "tech": ["React", "Emotion", "Firebase"],
    "overview": "Bookshelf is an app that allows people to create and share their book collection with others.",
    "githubRepo": "https://github.com/mariehooper/bookshelf",
    "headerImg": "bookshelf-window.png",
    "projectImage1": "books.png",
    "projectImage2": "my-collection.png",
    "biggestChallenge": "The biggest challenge while working on this app was coming up with a design that was simple and intuitive enough for someone like my mom to navigate it confidently.",
    "bestThingILearned": "With this project, I was able to dig into both React Hooks and Firebase's new Firestore for management of realtime data. I had also never used Emotion for styling in my React app and wanted to see how it compared to Styled Components.",
    "upNext": "I made this app with the intention of keeping a list of books we have received as gifts for our daughter. This way rather than sending a wish list that might exclude someone's idea of the perfect book, I can send a list that allows someone to feel confident that they are purchasing her something she doesn't already own. I want to explore ways to integrate this with a wish list and maybe expand functionality to allow people to more easily access and search through a group of friends' books.",
    "challenge": "Create a way to share a list of books I own with family and friends in order to allow them to purchase or recommend books I don't already own.",
    "process": "Design and develop a simple UI for creating, sharing and viewing book collections.",
    "solution": "A React app that utilizes the Google Books API in order to allow users to maintain and share a digital bookshelf."
  },
  {
    "name": "JSTOR Forum",
    "class": "forum",
    "tech": ["Vue.js", "ag-Grid", "Jest"],
    "overview": "JSTOR Forum is an app that allows institutions to manage, describe, and distribute their digital collections and projects to increase discoverability and use.",
    "live_site": "https://forum.jstor.org",
    "headerImg": "jstor-forum-window.png",
    "projectImage1": "publishing-example.png",
    "projectImage2": "activity-monitor.png",
    "biggestChallenge": "Some of the biggest challenges when working on this application have been finding ways to communicate to users the sheer quantity of workflows that exist to accomplish similar tasks. Since the application has such flexible use cases, we try to focus on finding ways to highlight and refine the most common pathways while leaving existing workflows accessible to our seasoned users.",
    "bestThingILearned": "Working on this project was extremely rewarding. Not only for my personal development as a front-end developer but also as a member of an agile team working to accomplish a very large goal. For a year we worked to refine our process as a software development team who was responsible for the entire spectrum of delivering a software including design, development, automated end to end testing, deployment, etc. Learning how to be an effective multi-discipline team member was an invaluable experience, not to mention all the lessons learned along the way about application architecture and how to build apps with an eye towards future functionality and feature updates.",
    "upNext": "After the rebuild, we have been conducting design sprints and user testing that helps us conceptualize, build and evaluate new features for our users. Features added so far this year have been related to viewing, filtering and publishing content so that our users are able to effectively upload and share their content in meaningful ways.",
    "challenge": "Bring JSTOR Forum into the ITHAKA ecosystem which leverages agile development practices and CI/CD to bring updates and value to users on a much more frequent basis than ever before, and give it a look and feel that is more consistent with ITHAKA's products like JSTOR and Artstor.",
    "process": "Rebuild the front-end of an existing application while completing an updated and more modern user interface and user experience with feedback heard from existing partners while the back-end team works to migrate services that allow us to make use of ITHAKA's infrastructure for continuous delivery.",
    "solution": "A Vue.js app with tons of flexible, customizable functionality that allow users to upload and manage their digital media collections as well as publish them for use by researchers, teachers and students at other institutions."
  },
  {
    "name": "Codework",
    "class": "codework",
    "tech": ["React", "Styled Components", "Firebase"],
    "overview": "The purpose of this app is to help people learn JavaScript in a fun and engaging way.",
    "live_site": "https://codework.netlify.com/",
    "githubRepo": "https://github.com/hoopr/codework",
    "headerImg": "codework.png",
    "projectImage1": "codework-submission-form.png",
    "projectImage2": "codework-submissions.png",
    "biggestChallenge": "The biggest challenge in building this app was to position 'problem of the day' in such a way that it didn't feel like a chore. All of the members of this group are either full-time designers, developers or master's students, so I knew the only way to get them to spend time on this was to make it fun and valuable.",
    "bestThingILearned": "This has been one of the most fulfilling projects of my career so far. What began as a group of 3 people including myself has turned into a group of 10 people with varying degrees of JavaScript experience, and the results have been better than any of us expected. I am a huge believer that starting a conversation about code (especially with people who are more experienced than you) is the best way to learn, and this project has helped us facilitate that conversation in a really awesome way.",
    "upNext": "Some of the next features to come on Codework are the ability to comment on submissions, searching and filtering by topic and tag, profile cards and more features that will continue to improve the learning experience for everyone.",
    "challenge": "What started as a Slack channel for a JavaScript problem of the day became an unwieldy list that was hard to refer back to and even harder to filter and search, so we needed a better way to deliver questions and answers.",
    "process": "Brainstorm most impactful pieces of learning programming and build that into an interactive app where contributors can answer daily questions and view and comment on other submissions.",
    "solution": "A React app connected to the CodeWars API allows us to expand our JavaScript group to facilitate a better conversation about code and best practices that can act as a living reference guide."
  },
  {
    "name": "Loan Payoff Calculator",
    "class": "calculator",
    "tech": ["React", "SCSS", "SVG"],
    "overview": "The purpose of this app is to encourage people to take control of their financial future by showing the impact of early loan payoff in terms of time and money savings.",
    "live_site": "https://loanpayoff.netlify.com/",
    "githubRepo": "https://github.com/mariehooper/loan-payoff-calculator",
    "headerImg": "loan-payoff-window.png",
    "projectImage1": "add-loan.png",
    "projectImage2": "loan-list.png",
    "biggestChallenge": "The hardest part about this app is striking a balance between being flexible and declarative. Realizing that the people I want to benefit from this app the most are perhaps the least financially savvy, it's important to find a way to make the interface inviting and impactful.",
    "bestThingILearned": "I knew I wanted to get familiar with React.js and felt that this was the best project to accomplish that with. Before digging into React, I got more comfortable writing vanilla JavaScript and learned all the new features available in es2015. This project has been a great learning experience and has really pushed the boundaries of my UX, front-end and programming skill set.",
    "upNext": "The largest feature-add will be the ability to show users a cascading effect of loan payoff and results of the two most common approaches to early loan payoff (highest interest rate first vs. lowest balance first). This will require being cognizant of the amount of information I present to the user and how to make sure it's providing the most motivational takeaway.",
    "challenge": "Present information to users about impact of early loan repayment in order to motivate them to jumpstart their interest savings.",
    "process": "Understand how people think about debt and simplify the message so as not to be overwhelming.",
    "solution": "An unintimidating app that allows people to make a plan to tackle their debt in a way that saves time and interest."
  },
  {
    "name": "Policymaker",
    "class": "policymaker",
    "tech": ["Python/Django", "jQuery", "Less.js"],
    "overview": "Policymaker is a Django application that was developed to facilitate simulation exercises for students at the University of Michigan.",
    "live_site": "https://policymaker.ai.umich.edu",
    "headerImg": "policymaker-window.png",
    "projectImage1": "policymaker-site-map.png",
    "projectImage2": "policymaker-schedule-sketch.png",
    "biggestChallenge": "The hardest part about working on this app is designing an interface that can be understood and used by anyone, regardless of their level of knowledge about simulations. While some apps are easier to relate to others, Policymaker is constantly challenging our ability to rely on workflows that users are familiar with.",
    "bestThingILearned": "I was pushed to step out of my front-end comfort zone on this project and have been working on the backend Python and Django. This has been an exciting (and equally frustrating at times) experience and has really helped to solidify a lot of foundational programming concepts that I was unfamiliar with. I also lead the design and front-end development efforts on this project, which has been great for learning how to manage priorities.",
    "upNext": "The next phase of the Policymaker is an overhaul of the simulation editor as we continue to learn more about potential use cases for additional schools at U-M and around the country. We have conducted many interviews and user tests after the conclusion of the in-simulation interface and will continue to iterate on that and our branding and marketing efforts.",
    "challenge": "Understand how instructors design simulation exercises in order to improve the workflow for creating and facilitating simulations while creating a better experience for student participants.",
    "process": "From the existing MVP app and related user feedback, define and prioritize the areas to redesign and what features should be included next.",
    "solution": "A flexible editor for facilitators to build, share, and reuse simulations, and an immersive experience for participants."
  },
  {
    "name": "GradeCraft",
    "class": "gradecraft",
    "tech": ["Ruby on Rails", "AngularJS", "jQuery", "Sass"],
    "overview": "GradeCraft is a learning management system designed to support gameful courses that is being developed at the University of Michigan.",
    "githubRepo": "https://github.com/UM-USElab/gradecraft-development",
    "headerImg": "gradecraft-window-1.png",
    "projectImage1": "dashboard-example.png",
    "projectImage2": "predictor-graphic.png",
    "biggestChallenge": "The biggest challenge I have faced on GradeCraft has been working on a project of this size. The codebase has been in development for nearly five years and is the collective effort of many different developers. As the lead front-end developer on the project, I am responsible for the user experience and accessibility of the app, and am constantly trying to think of new ways to streamline styles and components for ease of maintenance by the rest of my team.",
    "bestThingILearned": "Working on GradeCraft has been one of the biggest learning experiences of my career so far. The tech stack alone lent itself to gaining exposure to a multitude of languages (Ruby on Rails, Angular, jQuery, Haml) and working in a team taught me a lot about Git and how to most efficiently contribute to large codebase. Some of my largest contributions to this project include: dashboards for students and instructors, refactored analytics with plotly.js, mobile menus, more extensible sass architecture and style guidelines, accessibility and responsive design updates, and user experience updates based on many rounds of user testing.",
    "upNext": "Since GradeCraft is now publicly available, we are working to eliminate any user experience confusion as well as streamline the onboarding process for new instructors and students as we receive feedback from a much larger user community.",
    "challenge": "Support a non-traditional approach to grading where students start from 0 and build their grade up by earning positive points with each assignment.",
    "process": "Understand how to increase autonomy, belongingness, and community in the classroom and create an interface that allows instructors to build courses that accomplish this.",
    "solution": "A flexible application that allows instructors to create gameful experiences for their students while keeping assignments and grades organized and easy to track."
  }
]
